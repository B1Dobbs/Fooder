"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var observable_1 = require("tns-core-modules/data/observable");
var GridLayout = require("tns-core-modules/ui/layouts/grid-layout");
var StackLayout = require("tns-core-modules/ui/layouts/stack-layout");
var Label = require("tns-core-modules/ui/label");
var Image = require("tns-core-modules/ui/image");
var Button = require("tns-core-modules/ui/button");

var HomeViewModel = /** @class */ (function (_super) {
    
    __extends(HomeViewModel, _super);
    function HomeViewModel() {
        

    console.log("Stack:");
 
    let Grid = new GridLayout();
    let Label1 = new Label();
    let Label2 = new Label();
    Label1.text = "The Swipable Card plugin";
    Label1.textWrap=true;
    Label2.text = "Welcome to {N} we present you";
    Label2.textWrap=true;
    Grid.addChild(Label1);
    Grid.addChild(Label2);
    // Star and Auto modes for rows behave like corresponding setting for columns but refer to row height.
    var firstRow = new ItemSpec(1, "auto");
    var secondRow = new ItemSpec(1, "auto");
    Grid.addRow(firstRow);
    Grid.addRow(secondRow);
    GridLayout.setRow(Label1,0);
    GridLayout.setRow(Label2,1);
 
 
    let stack2 = new StackLayout();
    let image = new Image();
    image.src="~/images/apple.jpg"
    image.height=100;
    image.width=100;
    stack2.verticalAlignment = "middle";
    stack2.addChild(image);
    
 
    let stack3 = new StackLayout();
    let button = new Button();
    button.text="Click me!";
    button.width=100;
    button.textAlignment = "center";
    stack3.verticalAlignment = "middle";
    stack3.addChild(button);
    console.log("Stack:" + stack3);
    console.log(stack2);
    console.log(Grid);
    //this.stackCards = [stack3,stack2,Grid];
    //this.set("stackCards", this.stackCards);
        
         

        return _this;
    }

    HomeViewModel.prototype.getNewsIndex = function (args) {
        
    };

    return HomeViewModel;
}(observable_1.Observable));
exports.HomeViewModel = HomeViewModel;
exports.getNewsIndex = HomeViewModel.getNewsIndex;
